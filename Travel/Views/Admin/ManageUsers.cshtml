@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager
@model IEnumerable<ApplicationUser>

@{
    ViewData["Title"] = "Quản lý Người dùng";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">@ViewData["Title"]</h1>

    <div class="d-flex justify-content-between mb-3">
        <input id="searchInput" class="form-control w-25" type="text" placeholder="Tìm kiếm theo tên, email hoặc vai trò...">
        <select id="roleFilter" class="form-select w-25">
            <option value="">Tất cả vai trò</option>
            @foreach (var role in RoleManager.Roles)
            {
                <option value="@role.Name">@role.Name</option>
            }
        </select>
    </div>

    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div><i class="fas fa-users me-1"></i> Danh sách Người dùng</div>
            <a asp-controller="User" asp-action="Create" class="btn btn-primary">Thêm Người Dùng</a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered" id="userTable">
                    <thead class="table-dark">
                        <tr>
                            <th>Họ và Tên</th>
                            <th>Email</th>
                            <th>Vai trò</th>
                            <th>Trạng thái</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            var roles = await UserManager.GetRolesAsync(user);
                            <tr>
                                <td>@user.FullName</td>
                                <td>@user.Email</td>
                                <td>
                                    <form asp-controller="Admin" asp-action="ChangeUserRole" method="post">
                                        <input type="hidden" name="id" value="@user.Id" />
                                        <select name="newRole" class="form-select" onchange="this.form.submit()">
                                            @foreach (var role in RoleManager.Roles)
                                            {
                                                <option value="@role.Name" selected="@(roles.Contains(role.Name) ? "selected" : null)">@role.Name</option>
                                            }
                                        </select>
                                    </form>
                                </td>
                                <td>
                                    @if (user.IsActive)
                                    {
                                        <span class="text-success">Hoạt động</span>
                                    }
                                    else
                                    {
                                        <span class="text-danger">Bị khóa</span>
                                    }
                                </td>
                                <td>
                                    <a asp-controller="Admin" asp-action="EditUser" asp-route-id="@user.Id" class="btn btn-warning btn-sm">Sửa</a>
                                    <form asp-controller="Admin" asp-action="DeleteUser" method="post" style="display:inline;">
                                        <input type="hidden" name="id" value="@user.Id" />
                                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Bạn có chắc chắn muốn xóa?');">Xóa</button>
                                    </form>
                                    @if (user.IsActive)
                                    {
                                        <form asp-controller="Admin" asp-action="LockUser" method="post" style="display:inline;">
                                            <input type="hidden" name="id" value="@user.Id" />
                                            <button type="submit" class="btn btn-secondary btn-sm">Khóa</button>
                                        </form>
                                    }
                                    else
                                    {
                                        <form asp-controller="Admin" asp-action="UnlockUser" method="post" style="display:inline;">
                                            <input type="hidden" name="id" value="@user.Id" />
                                            <button type="submit" class="btn btn-success btn-sm">Mở khóa</button>
                                        </form>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let searchInput = document.getElementById('searchInput');
            let roleFilter = document.getElementById('roleFilter');

            function filterUsers() {
                let searchValue = searchInput.value.toLowerCase();
                let selectedRole = roleFilter.value.toLowerCase();
                let rows = document.querySelectorAll('#userTable tbody tr');

                rows.forEach(row => {
                    let name = row.cells[0].textContent.toLowerCase();
                    let email = row.cells[1].textContent.toLowerCase();

                    // Lấy vai trò từ select option thay vì textContent
                    let roleDropdown = row.querySelector('select[name="newRole"]');
                    let role = roleDropdown ? roleDropdown.value.toLowerCase() : '';

                    let matchesSearch = name.includes(searchValue) || email.includes(searchValue);
                    let matchesRole = (selectedRole === '' || role === selectedRole);

                    row.style.display = (matchesSearch && matchesRole) ? '' : 'none';
                });
            }

            searchInput.addEventListener('input', filterUsers);
            roleFilter.addEventListener('change', filterUsers);
        });
    </script>
}

}
