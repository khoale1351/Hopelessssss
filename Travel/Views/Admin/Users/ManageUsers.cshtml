@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<ApplicationUser>
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager

@{
    ViewData["Title"] = "Quản lý Người dùng";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">@ViewData["Title"]</h1>

    <div class="d-flex justify-content-between mb-3">
        <form id="filterForm" class="d-flex w-100">
            <input id="searchQuery" name="searchQuery" value="@ViewBag.SearchQuery" class="form-control me-2 w-50" type="text" placeholder="Tìm kiếm theo tên, email..." onkeyup="updateFilters()">
            <select id="roleFilter" name="roleFilter" class="form-select me-2 w-25" onchange="updateFilters()">
                <option value="">Tất cả vai trò</option>
                @foreach (var role in ViewBag.Roles as List<string>)
                {
                    <option value="@role" selected="@(role == ViewBag.SelectedRole ? "selected" : null)">@role</option>
                }
            </select>
        </form>
        <div class="btn-group">
            <a asp-action="ExportAllUsersToPdf" class="btn btn-danger">Xuất PDF</a>
            <a asp-action="ExportUsersToExcel" class="btn btn-success">Xuất Excel</a>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div><i class="fas fa-users me-1"></i> Danh sách Người dùng</div>
            <a asp-controller="Admin" asp-action="CreateUser" class="btn btn-primary">Thêm Người Dùng</a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered">
                    <thead class="table-dark">
                        <tr>
                            <th>Họ và Tên</th>
                            <th>Email</th>
                            <th>Vai trò</th>
                            <th>Trạng thái</th>
                            <th>Ngày tạo</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="userTableBody">
                        @foreach (var user in Model)
                        {
                            var roles = await UserManager.GetRolesAsync(user);
                            <tr>
                                <td>@user.FullName</td>
                                <td>@user.Email</td>
                                <td>
                                    <form asp-controller="Admin" asp-action="ChangeUserRole" method="post">
                                        <input type="hidden" name="id" value="@user.Id" />
                                        <select name="newRole" class="form-select" onchange="this.form.submit()">
                                            @foreach (var role in ViewBag.Roles as List<string>)
                                            {
                                                <option value="@role" selected="@(roles.Contains(role) ? "selected" : null)">@role</option>
                                            }
                                        </select>
                                    </form>
                                </td>
                                <td>
                                    @if (user.IsActive)
                                    {
                                        <span class="text-success">Hoạt động</span>
                                    }
                                    else
                                    {
                                        <span class="text-danger">Đã khóa</span>
                                    }
                                </td>
                                <td>@user.CreatedAt.ToString("dd/MM/yyyy")</td>
                                <td>
                                    <a asp-controller="Admin" asp-action="UserDetails" asp-route-id="@user.Id" class="btn btn-info btn-sm">Chi tiết</a>
                                    <a asp-controller="Admin" asp-action="EditUser" asp-route-id="@user.Id" class="btn btn-warning btn-sm">Sửa</a>
                                    <form asp-controller="Admin" asp-action="DeleteUser" method="post" style="display:inline;">
                                        <input type="hidden" name="id" value="@user.Id" />
                                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Bạn có chắc chắn muốn xóa?');">Xóa</button>
                                    </form>
                                    @if (user.IsActive)
                                    {
                                        <form asp-controller="Admin" asp-action="LockUser" method="post" style="display:inline;">
                                            <input type="hidden" name="id" value="@user.Id" />
                                            <button type="submit" class="btn btn-secondary btn-sm">Khóa</button>
                                        </form>
                                    }
                                    else
                                    {
                                        <form asp-controller="Admin" asp-action="UnlockUser" method="post" style="display:inline;">
                                            <input type="hidden" name="id" value="@user.Id" />
                                            <button type="submit" class="btn btn-success btn-sm">Mở khóa</button>
                                        </form>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <!-- Phân trang -->
                <div class="d-flex justify-content-center">
                    @Html.PagedListPager(Model, page => Url.Action("ManageUsers", new { page, searchQuery = ViewBag.SearchQuery, roleFilter = ViewBag.SelectedRole }), new PagedListRenderOptions
               {
                   UlElementClasses = new[] { "pagination" },
                   LiElementClasses = new[] { "page-item" },
                   PageClasses = new[] { "page-link" }
               })
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateFilters() {
            var searchQuery = document.getElementById("searchQuery").value;
            var roleFilter = document.getElementById("roleFilter").value;

            var url = '@Url.Action("ManageUsers", "Admin")';
            $.get(url, { searchQuery: searchQuery, roleFilter: roleFilter }, function (data) {
                $("#userTableBody").html($(data).find("#userTableBody").html());
                $(".pagination").html($(data).find(".pagination").html());
            });
        }
    </script>
}
