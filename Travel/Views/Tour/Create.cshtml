@model Travel.ViewModels.TourViewModel

@{
    ViewData["Title"] = "Create Tour";
}

<h2>Create New Tour</h2>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="TourName"></label>
        <input asp-for="TourName" class="form-control" />
        <span asp-validation-for="TourName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
    </div>

    <div class="form-group">
        <label asp-for="Price"></label>
        <input asp-for="Price" class="form-control" type="number" step="0.01" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Duration"></label>
        <input asp-for="Duration" class="form-control" type="number" />
        <span asp-validation-for="Duration" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="StartDate"></label>
        <input asp-for="StartDate" class="form-control" type="date" />
        <span asp-validation-for="StartDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EndDate"></label>
        <input asp-for="EndDate" class="form-control" type="date" />
        <span asp-validation-for="EndDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="AvailableSeats"></label>
        <input asp-for="AvailableSeats" class="form-control" type="number" />
        <span asp-validation-for="AvailableSeats" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="TourType"></label>
        <select asp-for="TourType" class="form-control">
            <option value="Private">Private</option>
            <option value="Group">Group</option>
        </select>
    </div>

    <div class="form-group">
        <label asp-for="TourStatus"></label>
        <select asp-for="TourStatus" class="form-control">
            <option value="Upcoming">Upcoming</option>
            <option value="Ongoing">Ongoing</option>
            <option value="Completed">Completed</option>
            <option value="Cancelled">Cancelled</option>
        </select>
    </div>

    <div class="form-group">
        <label>Destination</label>
        <input type="text" id="destinationSearch" class="form-control" placeholder="Search destinations..." />
        <input type="hidden" asp-for="DestinationId" id="selectedDestinationId" />
        <span asp-validation-for="DestinationId" class="text-danger"></span>
        <div id="destinationResults" class="list-group mt-2" style="display:none; position: absolute; z-index: 1000; width: 100%;"></div>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Create</button>
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </div>
</form>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#destinationSearch').on('input', function() {
                const searchTerm = $(this).val().trim();
                if (searchTerm.length >= 2) {
                    $.getJSON('/Tour/SearchDestinations', { searchTerm: searchTerm })
                        .done(function(data) {
                            const resultsContainer = $('#destinationResults');
                            resultsContainer.empty();

                            if (data && data.length > 0) {
                                data.forEach(function(destination) {
                                    const displayText = `${destination.name} - ${destination.city}, ${destination.country}`;
                                    resultsContainer.append(
                                        `<a class="dropdown-item" href="#"
                                           data-id="${destination.destinationId}"
                                           data-name="${displayText}">
                                            ${displayText}
                                        </a>`
                                    );
                                });
                                resultsContainer.show();
                            } else {
                                resultsContainer.hide();
                            }
                        })
                        .fail(function(jqXHR, textStatus, errorThrown) {
                            console.error("Error fetching destinations:", textStatus, errorThrown);
                        });
                } else {
                    $('#destinationResults').hide();
                }
            });

            // Xử lý khi chọn một điểm đến
            $(document).on('click', '#destinationResults .dropdown-item', function(e) {
                e.preventDefault();
                const destinationId = $(this).data('id');
                const destinationName = $(this).data('name');

                $('#destinationSearch').val(destinationName);
                $('#selectedDestinationId').val(destinationId);
                $('#destinationResults').hide();
            });

            // Ẩn dropdown khi click ra ngoài
            $(document).on('click', function(e) {
                if (!$(e.target).closest('#destinationSearch, #destinationResults').length) {
                    $('#destinationResults').hide();
                }
            });
        });
    </script>
}
