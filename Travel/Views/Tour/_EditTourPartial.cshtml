@model Travel.Models.Tour

<form id="editTourForm" method="post" enctype="multipart/form-data" onsubmit="return validateTourForm()">
    <input type="hidden" name="TourId" value="@Model.TourId" />
    <input type="hidden" id="currentDuration" value="@Model.Duration" />

    <div class="row">
        <div class="col-md-6">
            <div class="mb-3">
                <label class="form-label">Tên Tour</label>
                <input type="text" class="form-control" name="TourName" value="@Model.TourName" required>
            </div>

            <div class="mb-3">
                <label class="form-label">Điểm đến</label>
                <select class="form-control" name="DestinationId" required>
                    <option value="">Chọn điểm đến...</option>
                    @foreach (var destination in ViewBag.Destinations)
                    {
                        <option value="@destination.DestinationId"
                                selected="@(destination.DestinationId == Model.DestinationId)">
                            @destination.Name - @destination.City, @destination.Country
                        </option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label class="form-label">Mô tả</label>
                <textarea class="form-control" name="Description" rows="5">@Model.Description</textarea>
            </div>
        </div>

        <div class="col-md-6">
            <div class="mb-3">
                <label class="form-label">Giá (VNĐ)</label>
                <input type="number" class="form-control" name="Price" value="@Model.Price" min="0" step="0.01" required>
            </div>

            <div class="mb-3">
                <label class="form-label">Thời gian (ngày)</label>
                <input type="number" class="form-control" id="Duration" name="Duration"
                       value="@((Model.EndDate - Model.StartDate).Days + 1)" min="1" required
                       onchange="calculateEndDate()">

                <input type="number" class="form-control" id="Duration" name="Duration" value="@Model.Duration" min="1" required>
            </div>

            <div class="mb-3">
                <label class="form-label">Số chỗ</label>
                <input type="number" class="form-control" name="AvailableSeats" value="@Model.AvailableSeats" min="0" required>
            </div>

            <div class="mb-3">
                <label class="form-label">Ngày bắt đầu</label>
                <input type="date" class="form-control" id="StartDate" name="StartDate"
                       value="@Model.StartDate.ToString("yyyy-MM-dd")" required
                       onchange="updateDuration()">
                <input type="date" class="form-control" id="StartDate" name="StartDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" required onchange="calculateEndDate()">
            </div>

            <div class="mb-3">
                <label class="form-label">Ngày kết thúc</label>
                <input type="date" class="form-control" id="EndDate" name="EndDate"
                       value="@Model.EndDate.ToString("yyyy-MM-dd")" required
                       onchange="updateDuration()">
                <input type="date" class="form-control" id="EndDate" name="EndDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" required onchange="validateDates()">
                <small id="dateError" class="text-danger"></small>
            </div>

            <div class="mb-3">
                <label class="form-label">Loại Tour</label>
                <select class="form-control" name="TourType" required>
                    <option value="Private" selected="@(Model.TourType == "Private")">Tour riêng</option>
                    <option value="Group" selected="@(Model.TourType == "Group")">Tour nhóm</option>
                </select>
            </div>

            <div class="mb-3">
                <label class="form-label">Trạng thái</label>
                <select class="form-control" name="TourStatus" required>
                    <option value="Upcoming" selected="@(Model.TourStatus == "Upcoming")">Sắp diễn ra</option>
                    <option value="Ongoing" selected="@(Model.TourStatus == "Ongoing")">Đang diễn ra</option>
                    <option value="Completed" selected="@(Model.TourStatus == "Completed")">Đã hoàn thành</option>
                    <option value="Cancelled" selected="@(Model.TourStatus == "Cancelled")">Đã hủy</option>
                </select>
            </div>

            <div class="mb-3">
                <label class="form-label">Hình ảnh</label>
                <input type="file" class="form-control" name="ImageFile" accept="image/*">
                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <div class="mt-2">
                        <img src="@Url.Content($"~/{Model.ImageUrl}")" style="max-height: 100px;" class="img-thumbnail">
                        <a href="@Url.Content($"~/{Model.ImageUrl}")" target="_blank">Xem ảnh</a>
                    </div>
                }
            </div>
        </div>
    </div>
</form>

<script>
	$(document).ready(function () {
		// Kiểm tra jQuery và Select2
		console.log('jQuery version:', $.fn.jquery);
		console.log('Select2 loaded:', typeof $.fn.select2 !== 'undefined');

		// Khởi tạo Select2
		$('#destinationDropdown').select2({
			placeholder: "Nhập tên điểm đến hoặc chọn từ danh sách...",
			allowClear: true,
			width: '100%',
			dropdownParent: $('#addTourModal'),
			ajax: {
				url: '/Tour/SearchDestinations',
				dataType: 'json',
				delay: 250,
				data: function (params) {
					console.log('Gửi yêu cầu AJAX với searchTerm:', params.term || '');
					return {
						searchTerm: params.term || ''
					};
				},
				processResults: function (data) {
					console.log('Dữ liệu trả về từ SearchDestinations:', data);
					if (!Array.isArray(data)) {
						console.error('Dữ liệu không phải là mảng:', data);
						return { results: [] };
					}
					var results = data.map(function(item) {
						if (!item.destinationId || !item.name) {
							console.warn('Dữ liệu không hợp lệ:', item);
							return null;
						}
						return {
							id: item.destinationId,
							text: item.name + (item.city ? ' - ' + item.city : '') + (item.country ? ', ' + item.country : '')
						};
					}).filter(item => item !== null);
					return {
						results: results,
						pagination: {
							more: false
						}
					};
				},
				cache: true,
				error: function (xhr, status, error) {
					console.error('Lỗi khi gọi SearchDestinations:', xhr.status, error);
				}
			},
			minimumInputLength: 0,
			templateResult: function (data) {
				return data.text;
			},
			templateSelection: function (data) {
				return data.text;
			}
		});

		// Tự động mở dropdown với dữ liệu khi bấm vào
		$('#destinationDropdown').on('select2:open', function () {
			console.log('Mở dropdown');
			$(this).data('select2').trigger('query', { term: '' });
		});

		// Xem chi tiết
		$('#detailTourModal').on('show.bs.modal', function (event) {
			var button = $(event.relatedTarget);
			var tourId = button.data('id');
			$.get('/Tour/GetTourDetails/' + tourId)
				.done(function(data) {
					$('#detailTourContent').html(data);
				})
				.fail(function() {
					$('#detailTourContent').html('<div class="alert alert-danger">Không thể tải thông tin tour</div>');
				});
		});

		/* ========== PHẦN XỬ LÝ EDIT TOUR ========== */
		$('#editTourModal').on('shown.bs.modal', function (event) {
			var button = $(event.relatedTarget);
			var tourId = button.data('id');

			$.get('/Tour/GetEditTourForm/' + tourId)
				.done(function(data) {
					$('#editTourContent').html(data);

					// Khởi tạo Select2 cho dropdown điểm đến
					$('select[name="DestinationId"]').select2({
						placeholder: "Chọn điểm đến...",
						width: '100%',
						dropdownParent: $('#editTourModal')
					});

					// Gắn sự kiện change cho các trường ngày
					$('#editTourContent').on('change', '#StartDate, #EndDate', function() {
						calculateDuration();
					});

					// Tính toán ban đầu
					setTimeout(calculateDuration, 100);
				})
				.fail(function() {
					$('#editTourContent').html('<div class="alert alert-danger">Không thể tải form chỉnh sửa</div>');
				});
		});

		// Hàm tính toán Duration từ ngày bắt đầu/kết thúc
		function calculateDuration() {
			const startDate = new Date($('#StartDate').val());
			const endDate = new Date($('#EndDate').val());
			const durationField = $('#Duration');
			const dateError = $('#dateError');

			// Reset thông báo lỗi
			dateError.text('');

			if (isNaN(startDate.getTime()) {
				dateError.text("Vui lòng chọn ngày đi");
				return false;
			}

			if (isNaN(endDate.getTime())) {
				dateError.text("Vui lòng chọn ngày về");
				return false;
			}

			// Kiểm tra ngày về >= ngày đi
			if (startDate > endDate) {
				dateError.text("Ngày về phải sau ngày đi");
				durationField.val("");
				return false;
			}

			// Tính số ngày chênh lệch
			const timeDiff = endDate - startDate;
			const dayDiff = Math.floor(timeDiff / (1000 * 60 * 60 * 24)) + 1;

			// Kiểm tra giới hạn 30 ngày
			if (dayDiff > 30) {
				dateError.text("Tour không được quá 30 ngày");
				durationField.val("");
				return false;
			}

			// Cập nhật giá trị Duration
			durationField.val(dayDiff);
			return true;
		}

		// Xử lý submit form edit
		$(document).on('submit', '#editTourForm', function(e) {
			e.preventDefault();

			// Validate form trước khi submit
			if (!calculateDuration()) {
				alert("Vui lòng kiểm tra lại thông tin ngày tháng");
				return false;
			}

			// Kiểm tra các trường bắt buộc
			const requiredFields = $('#editTourForm [required]');
			let isFormValid = true;

			requiredFields.each(function() {
				if (!$(this).val()) {
					isFormValid = false;
					return false; // break loop
				}
			});

			if (!isFormValid) {
				alert("Vui lòng điền đầy đủ thông tin bắt buộc");
				return false;
			}

			// Gửi dữ liệu bằng AJAX
			var formData = new FormData(this);

			$.ajax({
				url: '/Tour/EditTour',
				type: 'POST',
				data: formData,
				processData: false,
				contentType: false,
				beforeSend: function() {
					// Hiển thị loading
					$('#editTourModal .btn-warning').prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang lưu...');
				},
				success: function(response) {
					if (response.success) {
						$('#editTourModal').modal('hide');
						window.location.reload(); // Reload trang để cập nhật dữ liệu
					} else {
						alert(response.message || "Có lỗi xảy ra khi cập nhật tour");
					}
				},
				error: function(xhr) {
					alert("Lỗi hệ thống: " + xhr.responseText);
				},
				complete: function() {
					$('#editTourModal .btn-warning').prop('disabled', false).text('Cập nhật');
				}
			});
		});

		// Xóa
		$('.delete-btn').click(function () {
			var tourId = $(this).data('id');
			var tourName = $(this).data('name');
			$('#tourNameToDelete').text(tourName);
			$('#deleteTourId').val(tourId);
			$('#deleteConfirmModal').modal('show');
		});

		$('#deleteForm').on('submit', function(e) {
			e.preventDefault();
			var formData = $(this).serialize();
			$.ajax({
				url: '/Tour/DeleteTour',
				type: 'POST',
				data: formData,
				success: function(response) {
					if (response.success) {
						$('#deleteConfirmModal').modal('hide');
						if (response.redirect) {
							window.location.href = response.redirect;
						}
					} else {
						$('#deleteConfirmModal .modal-body').prepend(
							'<div class="alert alert-danger alert-dismissible fade show" role="alert">' +
							response.message +
							'<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>'
						);
					}
				},
				error: function(xhr) {
					$('#deleteConfirmModal .modal-body').prepend(
						'<div class="alert alert-danger alert-dismissible fade show" role="alert">' +
						'Lỗi khi xóa tour: ' + xhr.responseText +
						'<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>'
					);
				}
			});
		});
	});
</script>