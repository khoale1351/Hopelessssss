@model Travel.Models.Tour

<form id="editTourForm" method="post" enctype="multipart/form-data" onsubmit="return validateTourForm()">
    <input type="hidden" name="TourId" value="@Model.TourId" />
    <input type="hidden" id="currentDuration" value="@Model.Duration" />

    <div class="row">
        <div class="col-md-6">
            <div class="mb-3">
                <label class="form-label">Tên Tour</label>
                <input type="text" class="form-control" name="TourName" value="@Model.TourName" required>
            </div>

            <div class="mb-3">
                <label class="form-label">Điểm đến</label>
                <select class="form-control" name="DestinationId" required>
                    <option value="">Chọn điểm đến...</option>
                    @foreach (var destination in ViewBag.Destinations)
                    {
                        <option value="@destination.DestinationId"
                                selected="@(destination.DestinationId == Model.DestinationId)">
                            @destination.Name - @destination.City, @destination.Country
                        </option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label class="form-label">Mô tả</label>
                <textarea class="form-control" name="Description" rows="5">@Model.Description</textarea>
            </div>
        </div>

        <div class="col-md-6">
            <div class="mb-3">
                <label class="form-label">Giá (VNĐ)</label>
                <input type="number" class="form-control" name="Price" value="@Model.Price" min="0" step="0.01" required>
            </div>

            <div class="mb-3">
                <label class="form-label">Thời gian (ngày)</label>
                <input type="number" class="form-control" id="Duration" name="Duration" value="@Model.Duration" min="1" required>
            </div>

            <div class="mb-3">
                <label class="form-label">Số chỗ</label>
                <input type="number" class="form-control" name="AvailableSeats" value="@Model.AvailableSeats" min="0" required>
            </div>

            <div class="mb-3">
                <label class="form-label">Ngày bắt đầu</label>
                <input type="date" class="form-control" id="StartDate" name="StartDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" required onchange="calculateEndDate()">
            </div>

            <div class="mb-3">
                <label class="form-label">Ngày kết thúc</label>
                <input type="date" class="form-control" id="EndDate" name="EndDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" required onchange="validateDates()">
                <small id="dateError" class="text-danger"></small>
            </div>

            <div class="mb-3">
                <label class="form-label">Loại Tour</label>
                <select class="form-control" name="TourType" required>
                    <option value="Private" selected="@(Model.TourType == "Private")">Tour riêng</option>
                    <option value="Group" selected="@(Model.TourType == "Group")">Tour nhóm</option>
                </select>
            </div>

            <div class="mb-3">
                <label class="form-label">Trạng thái</label>
                <select class="form-control" name="TourStatus" required>
                    <option value="Upcoming" selected="@(Model.TourStatus == "Upcoming")">Sắp diễn ra</option>
                    <option value="Ongoing" selected="@(Model.TourStatus == "Ongoing")">Đang diễn ra</option>
                    <option value="Completed" selected="@(Model.TourStatus == "Completed")">Đã hoàn thành</option>
                    <option value="Cancelled" selected="@(Model.TourStatus == "Cancelled")">Đã hủy</option>
                </select>
            </div>

            <div class="mb-3">
                <label class="form-label">Hình ảnh</label>
                <input type="file" class="form-control" name="ImageFile" accept="image/*">
                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <div class="mt-2">
                        <img src="@Model.ImageUrl" style="max-height: 100px;" class="img-thumbnail">
                        <a href="@Model.ImageUrl" target="_blank">Xem ảnh</a>
                    </div>
                }
            </div>
        </div>
    </div>
</form>

<script>
    function calculateEndDate() {
        const startDate = new Date(document.getElementById('StartDate').value);
        const duration = parseInt(document.getElementById('Duration').value);

        if (!isNaN(startDate.getTime()) && !isNaN(duration)) {
            const endDate = new Date(startDate);
            endDate.setDate(startDate.getDate() + duration - 1);

            const endDateString = endDate.toISOString().split('T')[0];
            document.getElementById('EndDate').value = endDateString;
        }
    }

    function validateDates() {
        const startDate = new Date(document.getElementById('StartDate').value);
        const endDate = new Date(document.getElementById('EndDate').value);
        const durationInput = document.getElementById('Duration');
        const dateError = document.getElementById('dateError');

        if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {
            return;
        }

        // Calculate difference in days
        const timeDiff = endDate - startDate;
        const dayDiff = Math.floor(timeDiff / (1000 * 60 * 60 * 24)) + 1;

        if (startDate > endDate) {
            dateError.textContent = "Ngày về phải sau ngày đi";
            return false;
        }

        if (dayDiff > 30) {
            dateError.textContent = "Tour không được quá 30 ngày";
            return false;
        }